{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","handleSubmit","e","a","preventDefault","trim","length","cats","onSubmit","type","value","onChange","target","getGifs","category","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","img","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAQxCC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACjBD,EAAEE,iBACCL,EAAWM,OAAOC,OAAS,IAC1BT,GAAc,SAAAU,GAAI,OAAKR,GAAL,mBAAoBQ,OACtCP,EAAc,KAJD,2CAAH,sDAQlB,OACI,0BAAMQ,SAAWP,GACb,2BACCQ,KAAK,OACLC,MAAQX,EACRY,SAjBiB,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,YCTlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAX,EAAA,6DAEbY,EAFa,0FAE8EC,UAAUF,GAFxF,sBAGAG,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,YAClB,MAAO,CACHC,GAFyC,EAAxBA,GAGjBC,MAHyC,EAApBA,MAIrBT,IAJyC,EAAbU,OAIhBC,iBAAiBX,QAVlB,kBAcZM,GAdY,4CAAH,sDCEPM,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOT,EAAW,EAAXA,IACtC,OACI,yBAAKa,UAAU,0CACX,yBAAKC,IAAMd,EAAMe,IAAMN,IACvB,+BAAMA,EAAN,OCFCO,EAAU,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACdhB,mBAAS,CAC/BsB,KAAM,GACNY,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAU,WACNtB,EAAQC,GACHsB,MAAK,SAAAC,GACFH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAGtB,CAAClB,IAEGmB,EDb0BK,CAAcxB,GAAlCW,EAFwB,EAE7BL,KAAaY,EAFgB,EAEhBA,QAErB,OACI,oCACC,wBAAIJ,UAAU,qCAAd,IAAqDd,EAArD,KAECkB,GAAW,uBAAGJ,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAEPH,EAAOH,KAAI,SAACe,GAAD,OACP,kBAAC,EAAD,eACAE,IAAMF,EAAId,IACLc,UEOVG,EAtBM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,gBAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAIvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BACA,4BAEQ4C,EAAWnB,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CACAyB,IAAMzB,EACNA,SAAWA,U,MCXnC4B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.1a4f2136.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n             type=\"text\"\r\n             value={ inputValue }\r\n             onChange={ handleInputChange } /> \r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n","export const getGifs = async ( category ) => {\r\n        \r\n    const url  = `https://api.giphy.com/v1/gifs/search?api_key=zBLfNuo282IhvZ5QN2cHVFMNNpkpyA5x&q=${ encodeURI(category) }&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(({ id, title, images }) => {\r\n        return {\r\n            id,\r\n            title,\r\n            url: images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title }/>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n         <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map((img) => (\r\n                    <GifGridItem \r\n                    key={ img.id }\r\n                    { ...img } />\r\n                ))\r\n            } \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(img => {\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]);\r\n    \r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                        key={ category }\r\n                        category={ category } />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}